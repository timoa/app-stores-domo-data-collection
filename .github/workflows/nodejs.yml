name: Build

on: [push]

jobs:

  # -- TESTS ------------------------------------------------------------------
  tests:
    name: Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: ['16']

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@f0143d7d92150d881096e39d9f6bf76a85ed3d2e
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3.4.1
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Install dependencies
        run: npm install

      - name: Run Unit-Tests + Code Coverage
        run: npm run test:coverage

      - name: Save Code Coverage
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3.1.0
        with:
          name: code-coverage
          path: coverage

  # -- SONARCLOUD -------------------------------------------------------------
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@f0143d7d92150d881096e39d9f6bf76a85ed3d2e
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Download Code Coverage
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3.0.0
        with:
          name: code-coverage
          path: coverage

      - name: Get App Version
        run: ./scripts/version.sh

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # -- SAST SCAN --------------------------------------------------------------
  code-security:
    name: Code Security
    runs-on: ubuntu-latest
    needs: tests
    # Skip any PR created by dependabot to avoid permission issues
    if: (github.actor != 'dependabot[bot]')

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@f0143d7d92150d881096e39d9f6bf76a85ed3d2e
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Perform Scan
        uses: ShiftLeftSecurity/scan-action@master

        env:
          WORKSPACE: https://github.com/${{ github.repository }}/blob/${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SCAN_ANNOTATE_PR: true

      - uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3.1.0
        with:
          name: reports
          path: reports

  # -- RELEASE ----------------------------------------------------------------
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - code-quality
      - code-security
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@f0143d7d92150d881096e39d9f6bf76a85ed3d2e
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # -- BUILD ------------------------------------------------------------------
  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   needs: release
  #   if: github.ref == 'refs/heads/master'

  #   steps:
      # - name: Harden GitHub Actions Runner
      #   uses: step-security/harden-runner@248ae51c2e8cc9622ecf50685c8bf7150c6e8813
      #   with:
      #     egress-policy: audit

  #     - name: Checkout
  #       uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3.0.0

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@f2a13332ac1ce8c0a71aeac48a150dbb1838ab67 # tag=v3.7.0
  #       with:
  #         images: ${{ github.repository }}
  #         tags: |
  #           type=schedule
  #           type=ref,event=branch
  #           type=ref,event=pr
  #           type=semver,pattern={{version}}
  #           type=semver,pattern={{major}}.{{minor}}
  #           type=semver,pattern={{major}}
  #           type=sha
  #           type=raw,value=latest

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480 # tag=v1.2.0

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # tag=v1.6.0

  #     - name: Login to DockerHub
  #       uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7 # tag=v1.14.1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push
  #       uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # tag=v2.10.0
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
